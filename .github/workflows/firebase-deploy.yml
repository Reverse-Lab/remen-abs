name: Build & Deploy Firebase

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      
      - name: Create .env.production
        run: |
          echo "Creating .env.production file..."
          # 기존 .env 파일들 제거
          rm -f .env .env.production
          # 환경변수 파일 생성
          cat > .env.production << 'EOF'
          REACT_APP_FIREBASE_API_KEY=${{ secrets.REACT_APP_FIREBASE_API_KEY }}
          REACT_APP_FIREBASE_AUTH_DOMAIN=${{ secrets.REACT_APP_FIREBASE_AUTH_DOMAIN }}
          REACT_APP_FIREBASE_PROJECT_ID=${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }}
          REACT_APP_FIREBASE_STORAGE_BUCKET=${{ secrets.REACT_APP_FIREBASE_STORAGE_BUCKET }}
          REACT_APP_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.REACT_APP_FIREBASE_MESSAGING_SENDER_ID }}
          REACT_APP_FIREBASE_APP_ID=${{ secrets.REACT_APP_FIREBASE_APP_ID }}
          REACT_APP_FIREBASE_MEASUREMENT_ID=${{ secrets.REACT_APP_FIREBASE_MEASUREMENT_ID }}
          EOF
          echo ".env.production file created successfully"
          echo "File size: $(wc -c < .env.production) bytes"
          echo "Number of lines: $(wc -l < .env.production)"

      - name: Verify .env.production
        run: |
          echo "Verifying .env.production file..."
          if [ ! -f .env.production ]; then
            echo "❌ .env.production file not found"
            exit 1
          fi
          echo "✅ .env.production file exists"
          echo "Checking if all required Firebase variables have actual values..."
          if grep -q "REACT_APP_FIREBASE_API_KEY=$" .env.production; then
            echo "❌ REACT_APP_FIREBASE_API_KEY is empty"
            exit 1
          fi
          if grep -q "REACT_APP_FIREBASE_PROJECT_ID=$" .env.production; then
            echo "❌ REACT_APP_FIREBASE_PROJECT_ID is empty"
            exit 1
          fi
          if grep -q "REACT_APP_FIREBASE_AUTH_DOMAIN=$" .env.production; then
            echo "❌ REACT_APP_FIREBASE_AUTH_DOMAIN is empty"
            exit 1
          fi
          if grep -q "REACT_APP_FIREBASE_STORAGE_BUCKET=$" .env.production; then
            echo "❌ REACT_APP_FIREBASE_STORAGE_BUCKET is empty"
            exit 1
          fi
          if grep -q "REACT_APP_FIREBASE_MESSAGING_SENDER_ID=$" .env.production; then
            echo "❌ REACT_APP_FIREBASE_MESSAGING_SENDER_ID is empty"
            exit 1
          fi
          if grep -q "REACT_APP_FIREBASE_APP_ID=$" .env.production; then
            echo "❌ REACT_APP_FIREBASE_APP_ID is empty"
            exit 1
          fi
          echo "✅ All required Firebase variables have values"
          echo "File contents (first few characters of each line):"
          while IFS= read -r line; do
            if [[ $line == REACT_APP_FIREBASE_API_KEY=* ]]; then
              echo "REACT_APP_FIREBASE_API_KEY=[HIDDEN]"
            elif [[ $line == REACT_APP_FIREBASE_APP_ID=* ]]; then
              echo "REACT_APP_FIREBASE_APP_ID=[HIDDEN]"
            else
              echo "$line"
            fi
          done < .env.production

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: |
          export REACT_APP_FIREBASE_API_KEY="${{ secrets.REACT_APP_FIREBASE_API_KEY }}"
          export REACT_APP_FIREBASE_AUTH_DOMAIN="${{ secrets.REACT_APP_FIREBASE_AUTH_DOMAIN }}"
          export REACT_APP_FIREBASE_PROJECT_ID="${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }}"
          export REACT_APP_FIREBASE_STORAGE_BUCKET="${{ secrets.REACT_APP_FIREBASE_STORAGE_BUCKET }}"
          export REACT_APP_FIREBASE_MESSAGING_SENDER_ID="${{ secrets.REACT_APP_FIREBASE_MESSAGING_SENDER_ID }}"
          export REACT_APP_FIREBASE_APP_ID="${{ secrets.REACT_APP_FIREBASE_APP_ID }}"
          export REACT_APP_FIREBASE_MEASUREMENT_ID="${{ secrets.REACT_APP_FIREBASE_MEASUREMENT_ID }}"
          echo "Environment variables set:"
          echo "API_KEY length: ${#REACT_APP_FIREBASE_API_KEY}"
          echo "PROJECT_ID: $REACT_APP_FIREBASE_PROJECT_ID"
          echo "AUTH_DOMAIN: $REACT_APP_FIREBASE_AUTH_DOMAIN"
          npm run build:github
        env:
          CI: false
          GENERATE_SOURCEMAP: false
          DISABLE_ESLINT_PLUGIN: true

      - name: Deploy to Firebase
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_REMEN_ABS }}'
          channelId: live
          projectId: remen-abs
          entryPoint: ./
