# Cursor AI 코딩 룰 - GitHub Actions Firebase 배포 환경

## 프로젝트 개요
- React 19 + TypeScript 기반 SPA
- Firebase Hosting을 통한 배포
- GitHub Actions CI/CD 파이프라인
- Tailwind CSS + Framer Motion UI

## 배포 환경 고려사항

### GitHub Actions 배포 파이프라인
- main 브랜치 push 시 자동 배포
- Firebase Hosting 대상: https://remen-abs.web.app
- 환경 변수는 GitHub Secrets를 통해 주입
- 빌드 시 .env.production 파일 자동 생성

### 환경 변수 관리
- 로컬 개발: .env.local 파일 사용 (Git에 포함되지 않음)
- GitHub Actions: GitHub Secrets 사용
- Firebase 설정: REACT_APP_FIREBASE_* 환경 변수
- 프로덕션 빌드: CI=false, GENERATE_SOURCEMAP=false

## 코딩 규칙

### TypeScript 설정
- strict 모드 활성화
- 명시적 타입 정의 권장
- any 타입 사용 금지
- interface 사용 (type alias 대신)

### React 컴포넌트
- 함수형 컴포넌트 사용
- React Hooks 활용 (useState, useEffect, useCallback, useMemo)
- Props는 interface로 타입 정의
- 컴포넌트명은 PascalCase
- 파일명은 컴포넌트명과 동일

### 스타일링
- Tailwind CSS 클래스 우선 사용
- 커스텀 CSS는 최소화
- 반응형 디자인으로 단어 잘려서 줄바꿈 금지(모바일 우선)
- Framer Motion 애니메이션 활용

### Firebase 통합
- Firebase SDK v12 사용
- 환경 변수를 통한 설정
- 에러 처리 및 로딩 상태 관리
- 보안 규칙 준수


### 네이밍 컨벤션
- 변수/함수: camelCase
- 상수: UPPER_SNAKE_CASE
- 컴포넌트: PascalCase
- 파일명: 컴포넌트와 동일한 이름
- 폴더명: 소문자, 복수형

## 코드 품질 규칙

### ESLint 설정
- react-app 기본 규칙 준수
- TypeScript 관련 규칙 활성화
- 사용하지 않는 변수 경고
- React Hooks 규칙 준수

### 코드 스타일
- 들여쓰기: 2칸 공백
- 따옴표: 작은따옴표
- 세미콜론: 항상 사용
- 최대 줄 길이: 100자
- trailing comma 사용

### 주석 및 문서화
- 복잡한 로직에만 주석 작성
- JSDoc 스타일 사용
- TODO, FIXME 태그 활용
- README.md 파일 유지보수

## 배포 관련 주의사항

### 빌드 최적화
- 소스맵 생성 비활성화 (프로덕션)
- 번들 크기 최적화
- 이미지 및 정적 자산 최적화
- 코드 스플리팅 활용

### 환경별 설정
- 개발: .env.local
- 테스트: .env.test
- 프로덕션: GitHub Secrets (자동 생성)

### Firebase 설정
- 프로젝트 ID: remen-abs
- 호스팅 타겟: default
- 빌드 출력: build/ 폴더
- SPA 라우팅: 모든 경로를 index.html로 리다이렉트

## AI 코딩 가이드

### 컴포넌트 생성 시
"React TypeScript 함수형 컴포넌트를 생성해주세요. Props는 interface로 정의하고, Tailwind CSS로 스타일링하며, Firebase 배포 환경을 고려해주세요."

### Firebase 기능 구현 시
"Firebase 기능을 구현해주세요. 환경 변수를 사용하고, 에러 처리를 포함하며, GitHub Actions 배포 환경에서 작동하도록 해주세요."

### 성능 최적화 시
"이 컴포넌트의 성능을 최적화해주세요. React.memo, useCallback, useMemo를 적절히 사용하고, 번들 크기를 고려해주세요."

## 테스트 및 품질 관리
- Jest + React Testing Library 사용
- 컴포넌트 단위 테스트 작성
- E2E 테스트 고려
- 코드 커버리지 모니터링

## 보안 고려사항
- 환경 변수 노출 방지
- Firebase 보안 규칙 설정
- 사용자 입력 검증
- HTTPS 강제 사용

## 성능 모니터링
- Web Vitals 측정
- Firebase Analytics 활용
- 번들 분석 도구 사용
- Core Web Vitals 최적화
